<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.t3q.dranswer.mapper.MicroDomainMapper">

    <resultMap type="DbMicroDomain" id="dbMicroDomainMap">
        <result property="microService"			column="micro_service" />
        <result property="domain"				column="domain" />
        <result property="path"		            column="path" />
        <result property="port"		            column="port" />
        <result property="modTimestamp"			column="mod_timestamp" />
        <result property="regTimestamp"			column="reg_timestamp" />
    </resultMap>

    <select id="getMicroSequence" resultType="int">
        select nextval('swint.swint_mic_seq')
    </select>

    <select id="selectMicroDomain" parameterType="String" resultType="DbMicroDomain">
        select	*
        from	tb_micro_domain
        where	domain = #{domain}
    </select>


    <select id="selectMicroDomainByMicro" parameterType="String" resultMap="dbMicroDomainMap">
        select	*
        from	tb_micro_domain
        where	micro_service = #{microService}
    </select>


    <insert id="insertMicroDomain" parameterType="map">
        insert into tb_micro_domain
        (
            micro_service,
            domain,
            path,
            port
        ) values (
            #{obj.microService},
            #{obj.domain},
            #{obj.path},
            #{obj.port}
        )
    </insert>


    <update id="updateMicroDomain" parameterType="map">
        update tb_micro_domain set
            domain              = #{obj.renewDomain},
            path                = #{obj.path},
            port                = #{obj.port},
            mod_timestamp       = current_timestamp
        where   micro_service   = #{obj.microId}
        and     domain          = #{obj.presentDomain}
    </update>

    <select id="selectMicroDomainByServiceAndDomain" parameterType="DbMicroDomain">
        select *
        from    tb_micro_domain
        where   micro_service   = #{obj.microService}
        and     domain          = #{obj.domain}
    </select>

    <update id="deleteMicroDomainByMicro" parameterType="String">
        update tb_micro_domain set
            del_yn  = 'Y',
            mod_timestamp = current_timestamp
        where   micro_service = #{microService}
    </update>

    <update id="recoverMicroDomain" parameterType="String">
        update tb_micro_domain set
            del_yn  = 'N',
            mod_timestamp = current_timestamp
        where   micro_service = #{micro}
    </update>

    <delete id="deleteMicroDomain" parameterType="map">
        delete from tb_micro_domain
        where   micro_service   = #{obj.microId}
        and     domain          = #{obj.domain}
    </delete>

</mapper>